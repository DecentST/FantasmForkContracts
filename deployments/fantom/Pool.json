{
  "address": "0x79174F2B99C45E24D14c99e640400cE292777C71",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_xToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_yToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_yTokenReserve",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_mintingFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_redemptionFee",
          "type": "uint256"
        }
      ],
      "name": "FeesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_minCollateralRatio",
          "type": "uint256"
        }
      ],
      "name": "MinCollateralRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ratioStepUp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ratioStepDown",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_priceBand",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_refreshCooldown",
          "type": "uint256"
        }
      ],
      "name": "NewCollateralRatioOptions",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_cr",
          "type": "uint256"
        }
      ],
      "name": "NewCollateralRatioSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "OracleChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Recollateralized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "yTokenOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_swapper",
          "type": "address"
        }
      ],
      "name": "SwapStrategyChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_mintPaused",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_redeemPaused",
          "type": "bool"
        }
      ],
      "name": "Toggled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "TreasurySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_collateralRatioPaused",
          "type": "bool"
        }
      ],
      "name": "UpdateCollateralRatioPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "YTokenSlippageSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINTING_FEE_MAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REDEMPTION_FEE_MAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calcExcessCollateralBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_delta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_exceeded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ethIn",
          "type": "uint256"
        }
      ],
      "name": "calcMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_xTokenOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_yTokenOutTwap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ethFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ethSwapIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_xTokenIn",
          "type": "uint256"
        }
      ],
      "name": "calcRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_ethOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_yTokenOutSpot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_yTokenOutTwap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ethFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_requiredEthBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralRatioPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "info",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_collateralRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lastRefreshCrTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintingFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_redemptionFee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_mintingPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_redemptionPaused",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_collateralBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRefreshCrTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minCollateralRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minXTokenOut",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IMasterOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceBand",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ratioStepDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ratioStepUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recollateralize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_xTokenIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minYTokenOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minEthOut",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeemPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redemptionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "reduceExcessCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refreshCollateralRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refreshCooldown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ratioStepUp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ratioStepDown",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_priceBand",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refreshCooldown",
          "type": "uint256"
        }
      ],
      "name": "setCollateralRatioOptions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_mintingFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_redemptionFee",
          "type": "uint256"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minCollateralRatio",
          "type": "uint256"
        }
      ],
      "name": "setMinCollateralRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IMasterOracle",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISwapStrategy",
          "name": "_swapStrategy",
          "type": "address"
        }
      ],
      "name": "setSwapStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_slippage",
          "type": "uint256"
        }
      ],
      "name": "setYTokenSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapStrategy",
      "outputs": [
        {
          "internalType": "contract ISwapStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_mintPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_redeemPaused",
          "type": "bool"
        }
      ],
      "name": "toggle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_collateralRatioPaused",
          "type": "bool"
        }
      ],
      "name": "toggleCollateralRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unclaimedEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unclaimedXToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unclaimedYToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usableCollateralBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "xTokenBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yTokenBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastAction",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "xToken",
      "outputs": [
        {
          "internalType": "contract IXToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yToken",
      "outputs": [
        {
          "internalType": "contract IYToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yTokenReserve",
      "outputs": [
        {
          "internalType": "contract IYTokenReserve",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yTokenSlippage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc72c91b4168fe1162f0d57d65f2f16a9bf7b364d7587add41f143ce46b00465d",
  "receipt": {
    "to": null,
    "from": "0xA9964a4a3fc91B735ED7d7f5e4Ff8c9913B71dBF",
    "contractAddress": "0x79174F2B99C45E24D14c99e640400cE292777C71",
    "transactionIndex": 20,
    "gasUsed": "2879172",
    "logsBloom": "0x
    "blockHash": "0x0001775f000007d4a6928b399e2ab3b40864602e36d4dfefe6c4961659c6d07f",
    "transactionHash": "0xc72c91b4168fe1162f0d57d65f2f16a9bf7b364d7587add41f143ce46b00465d",
    "logs": [
      {
        "transactionIndex": 20,
        "blockNumber": 34277694,
        "transactionHash": "0xc72c91b4168fe1162f0d57d65f2f16a9bf7b364d7587add41f143ce46b00465d",
        "address": "0x79174F2B99C45E24D14c99e640400cE292777C71",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a9964a4a3fc91b735ed7d7f5e4ff8c9913b71dbf"
        ],
        "data": "0x",
        "logIndex": 43,
        "blockHash": "0x0001775f000007d4a6928b399e2ab3b40864602e36d4dfefe6c4961659c6d07f"
      }
    ],
    "blockNumber": 34277694,
    "cumulativeGasUsed": "5658611",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x922a3499c8B797e40d41800C56e38A0D4DBc8D86",
    "0x2578d23dbF37FFC95f7b73C21cE6b3d6270efEA5",
    "0xdb12E8251089AAc7C133B50046A160217c0C4207"
  ],
  "numDeployments": 1,
  "solcInputHash": "e3b934c02ffbee22c3654f8fe1ecc068",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_xToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_yToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_yTokenReserve\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_mintingFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_redemptionFee\",\"type\":\"uint256\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minCollateralRatio\",\"type\":\"uint256\"}],\"name\":\"MinCollateralRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ratioStepUp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ratioStepDown\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_priceBand\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_refreshCooldown\",\"type\":\"uint256\"}],\"name\":\"NewCollateralRatioOptions\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_cr\",\"type\":\"uint256\"}],\"name\":\"NewCollateralRatioSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"OracleChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Recollateralized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yTokenOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_swapper\",\"type\":\"address\"}],\"name\":\"SwapStrategyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_mintPaused\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_redeemPaused\",\"type\":\"bool\"}],\"name\":\"Toggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"TreasurySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_collateralRatioPaused\",\"type\":\"bool\"}],\"name\":\"UpdateCollateralRatioPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"YTokenSlippageSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINTING_FEE_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REDEMPTION_FEE_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calcExcessCollateralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_delta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_exceeded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethIn\",\"type\":\"uint256\"}],\"name\":\"calcMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_xTokenOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_yTokenOutTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ethFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ethSwapIn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_xTokenIn\",\"type\":\"uint256\"}],\"name\":\"calcRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_yTokenOutSpot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_yTokenOutTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ethFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requiredEthBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralRatioPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lastRefreshCrTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_redemptionFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_mintingPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_redemptionPaused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_collateralBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRefreshCrTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minCollateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minXTokenOut\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IMasterOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceBand\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratioStepDown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratioStepUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recollateralize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_xTokenIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minYTokenOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minEthOut\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redemptionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reduceExcessCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refreshCollateralRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refreshCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratioStepUp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ratioStepDown\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_priceBand\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refreshCooldown\",\"type\":\"uint256\"}],\"name\":\"setCollateralRatioOptions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_redemptionFee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minCollateralRatio\",\"type\":\"uint256\"}],\"name\":\"setMinCollateralRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMasterOracle\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISwapStrategy\",\"name\":\"_swapStrategy\",\"type\":\"address\"}],\"name\":\"setSwapStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"setYTokenSlippage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapStrategy\",\"outputs\":[{\"internalType\":\"contract ISwapStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_mintPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_redeemPaused\",\"type\":\"bool\"}],\"name\":\"toggle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_collateralRatioPaused\",\"type\":\"bool\"}],\"name\":\"toggleCollateralRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unclaimedEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unclaimedXToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unclaimedYToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usableCollateralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastAction\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xToken\",\"outputs\":[{\"internalType\":\"contract IXToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yToken\",\"outputs\":[{\"internalType\":\"contract IYToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yTokenReserve\",\"outputs\":[{\"internalType\":\"contract IYTokenReserve\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yTokenSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calcMint(uint256)\":{\"params\":{\"_ethIn\":\"Amount of Collateral token input.\"},\"returns\":{\"_ethFee\":\": the fee amount in Collateral token.\",\"_ethSwapIn\":\": the amount of Collateral token to swap\",\"_xTokenOut\":\": the amount of XToken output.\",\"_yTokenOutTwap\":\": the amount of YToken output by swapping based on Twap price\"}},\"calcRedeem(uint256)\":{\"params\":{\"_xTokenIn\":\"Amount of XToken input.\"},\"returns\":{\"_ethFee\":\": the fee amount in Eth\",\"_ethOut\":\": the amount of Eth output\",\"_requiredEthBalance\":\": required Eth balance in the pool\",\"_yTokenOutSpot\":\": the amount of YToken output based on Spot prrice\",\"_yTokenOutTwap\":\": the amount of YToken output based on TWAP\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reduceExcessCollateral(uint256)\":{\"params\":{\"_amount\":\"amount of WETH to reduce\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setCollateralRatioOptions(uint256,uint256,uint256,uint256)\":{\"params\":{\"_priceBand\":\"The collateral ratio will only be adjusted if current price move out of this band\",\"_ratioStepDown\":\"Step which Collateral Ratio will be decreased each updates\",\"_ratioStepUp\":\"Step which Collateral Ratio will be increased each updates\",\"_refreshCooldown\":\"The minimum delay between each Collateral Ratio updates\"}},\"setFees(uint256,uint256)\":{\"params\":{\"_mintingFee\":\"Minting fee in percentage\",\"_redemptionFee\":\"Redemption fee in percentage\"}},\"setMinCollateralRatio(uint256)\":{\"params\":{\"_minCollateralRatio\":\"value of minimum Collateral Ratio in 1e6 precision\"}},\"setOracle(address)\":{\"params\":{\"_oracle\":\"address of the oracle\"}},\"setSwapStrategy(address)\":{\"params\":{\"_swapStrategy\":\"address of Swapper utils contract\"}},\"setTreasury(address)\":{\"params\":{\"_treasury\":\"address of Treasury contract\"}},\"toggle(bool,bool)\":{\"params\":{\"_mintPaused\":\"Paused or NotPaused Minting\",\"_redeemPaused\":\"Paused or NotPaused Redemption\"}},\"toggleCollateralRatio(bool)\":{\"params\":{\"_collateralRatioPaused\":\"`true` or `false`\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calcExcessCollateralBalance()\":{\"notice\":\"Calculate the excess collateral balance\"},\"calcMint(uint256)\":{\"notice\":\"Calculate the expected results for zap minting\"},\"calcRedeem(uint256)\":{\"notice\":\"Calculate the expected results for redemption\"},\"collect()\":{\"notice\":\"collect all minting and redemption\"},\"recollateralize()\":{\"notice\":\"Function to recollateralize the pool by receiving ETH\"},\"reduceExcessCollateral(uint256)\":{\"notice\":\"Transfer the excess balance of WETH to FeeReserve\"},\"refreshCollateralRatio()\":{\"notice\":\"Update collateral ratio and adjust based on the TWAP price of XToken\"},\"setCollateralRatioOptions(uint256,uint256,uint256,uint256)\":{\"notice\":\"Configure variables related to Collateral Ratio\"},\"setFees(uint256,uint256)\":{\"notice\":\"Set the protocol fees\"},\"setMinCollateralRatio(uint256)\":{\"notice\":\"Set the minimum Collateral Ratio\"},\"setOracle(address)\":{\"notice\":\"Set new oracle address\"},\"setSwapStrategy(address)\":{\"notice\":\"Set the address of Swapper utils\"},\"setTreasury(address)\":{\"notice\":\"Set the address of Treasury\"},\"setYTokenSlippage(uint256)\":{\"notice\":\"Set yTokenSlipage\"},\"toggle(bool,bool)\":{\"notice\":\"Turn on / off minting and redemption\"},\"toggleCollateralRatio(bool)\":{\"notice\":\"Pause or unpause collateral ratio updates\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = _allowances[owner][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\"},\"contracts/Pool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\nimport \\\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\\\";\\r\\nimport \\\"./interfaces/IXToken.sol\\\";\\r\\nimport \\\"./interfaces/IYToken.sol\\\";\\r\\nimport \\\"./interfaces/IYTokenReserve.sol\\\";\\r\\nimport \\\"./interfaces/IMasterOracle.sol\\\";\\r\\nimport \\\"./interfaces/IWETH.sol\\\";\\r\\nimport \\\"./interfaces/ISwapStrategy.sol\\\";\\r\\nimport \\\"./libs/WethUtils.sol\\\";\\r\\n\\r\\ncontract Pool is Ownable, ReentrancyGuard {\\r\\n    using SafeERC20 for ERC20;\\r\\n    using SafeERC20 for IWETH;\\r\\n    using SafeERC20 for IXToken;\\r\\n    using SafeERC20 for IYToken;\\r\\n\\r\\n    struct UserInfo {\\r\\n        uint256 xTokenBalance;\\r\\n        uint256 yTokenBalance;\\r\\n        uint256 ethBalance;\\r\\n        uint256 lastAction;\\r\\n    }\\r\\n\\r\\n    /* ========== ADDRESSES ================ */\\r\\n\\r\\n    IMasterOracle public oracle;\\r\\n    IXToken public xToken;\\r\\n    IYToken public yToken;\\r\\n    IYTokenReserve public yTokenReserve;\\r\\n    ISwapStrategy public swapStrategy;\\r\\n    address public treasury;\\r\\n\\r\\n    /* ========== STATE VARIABLES ========== */\\r\\n\\r\\n    mapping(address => UserInfo) public userInfo;\\r\\n\\r\\n    uint256 public unclaimedEth;\\r\\n    uint256 public unclaimedXToken;\\r\\n    uint256 public unclaimedYToken;\\r\\n\\r\\n    // Constants for various precisions\\r\\n    uint256 private constant PRICE_PRECISION = 1e18;\\r\\n    uint256 private constant COLLATERAL_RATIO_MAX = 1e6;\\r\\n    uint256 private constant PRECISION = 1e6;\\r\\n\\r\\n    // AccessControl state variables\\r\\n    bool public mintPaused = false;\\r\\n    bool public redeemPaused = false;\\r\\n\\r\\n    // Collateral ratio\\r\\n    uint256 public collateralRatio = 1e6;\\r\\n    uint256 public lastRefreshCrTimestamp;\\r\\n    uint256 public refreshCooldown = 3600; // = 1 hour\\r\\n    uint256 public ratioStepUp = 2000; // = 0.002 or 0.2% -> ratioStep when CR increase\\r\\n    uint256 public ratioStepDown = 1000; // = 0.001 or 0.1% -> ratioStep when CR decrease\\r\\n    uint256 public priceTarget = 1e18; // = 1; 1 XToken pegged to the value of 1 ETH\\r\\n    uint256 public priceBand = 5e15; // = 0.005; CR will be adjusted if XToken > 1.005 ETH or XToken < 0.995 ETH\\r\\n    uint256 public minCollateralRatio = 1e6;\\r\\n    uint256 public yTokenSlippage = 100000; // 10%\\r\\n    bool public collateralRatioPaused = false;\\r\\n\\r\\n    // fees\\r\\n    uint256 public redemptionFee = 5000; // 6 decimals of precision\\r\\n    uint256 public constant REDEMPTION_FEE_MAX = 9000; // 0.9%\\r\\n    uint256 public mintingFee = 3000; // 6 decimals of precision\\r\\n    uint256 public constant MINTING_FEE_MAX = 5000; // 0.5%\\r\\n\\r\\n    /* ========== CONSTRUCTOR ========== */\\r\\n\\r\\n    constructor(\\r\\n        address _xToken,\\r\\n        address _yToken,\\r\\n        address _yTokenReserve\\r\\n    ) {\\r\\n        require(_xToken != address(0), \\\"Pool::initialize: invalidAddress\\\");\\r\\n        require(_yToken != address(0), \\\"Pool::initialize: invalidAddress\\\");\\r\\n        require(_yTokenReserve != address(0), \\\"Pool::initialize: invalidAddress\\\");\\r\\n        xToken = IXToken(_xToken);\\r\\n        xToken.setMinter(address(this));\\r\\n        yToken = IYToken(_yToken);\\r\\n        yTokenReserve = IYTokenReserve(_yTokenReserve);\\r\\n        yTokenReserve.setPool(address(this));\\r\\n    }\\r\\n\\r\\n    /* ========== VIEWS ========== */\\r\\n\\r\\n    function info()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256 _collateralRatio,\\r\\n            uint256 _lastRefreshCrTimestamp,\\r\\n            uint256 _mintingFee,\\r\\n            uint256 _redemptionFee,\\r\\n            bool _mintingPaused,\\r\\n            bool _redemptionPaused,\\r\\n            uint256 _collateralBalance\\r\\n        )\\r\\n    {\\r\\n        _collateralRatio = collateralRatio;\\r\\n        _lastRefreshCrTimestamp = lastRefreshCrTimestamp;\\r\\n        _mintingFee = mintingFee;\\r\\n        _redemptionFee = redemptionFee;\\r\\n        _mintingPaused = mintPaused;\\r\\n        _redemptionPaused = redeemPaused;\\r\\n        _collateralBalance = usableCollateralBalance();\\r\\n    }\\r\\n\\r\\n    function usableCollateralBalance() public view returns (uint256) {\\r\\n        uint256 _balance = WethUtils.weth.balanceOf(address(this));\\r\\n        return _balance > unclaimedEth ? (_balance - unclaimedEth) : 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Calculate the expected results for zap minting\\r\\n    /// @param _ethIn Amount of Collateral token input.\\r\\n    /// @return _xTokenOut : the amount of XToken output.\\r\\n    /// @return _yTokenOutTwap : the amount of YToken output by swapping based on Twap price\\r\\n    /// @return _ethFee : the fee amount in Collateral token.\\r\\n    /// @return _ethSwapIn : the amount of Collateral token to swap\\r\\n    function calcMint(uint256 _ethIn)\\r\\n        public\\r\\n        view\\r\\n        returns (\\r\\n            uint256 _xTokenOut,\\r\\n            uint256 _yTokenOutTwap,\\r\\n            uint256 _ethFee,\\r\\n            uint256 _ethSwapIn\\r\\n        )\\r\\n    {\\r\\n        uint256 _yTokenTwap = oracle.getYTokenTWAP();\\r\\n        require(_yTokenTwap > 0, \\\"Pool::calcMint: Invalid YToken price\\\");\\r\\n        _ethSwapIn = (_ethIn * (COLLATERAL_RATIO_MAX - collateralRatio)) / COLLATERAL_RATIO_MAX;\\r\\n        _yTokenOutTwap = (_ethSwapIn * PRICE_PRECISION) / _yTokenTwap;\\r\\n        _ethFee = (_ethIn * mintingFee * collateralRatio) / COLLATERAL_RATIO_MAX / PRECISION;\\r\\n        _xTokenOut = _ethIn - ((_ethIn * mintingFee) / PRECISION);\\r\\n    }\\r\\n\\r\\n    /// @notice Calculate the expected results for redemption\\r\\n    /// @param _xTokenIn Amount of XToken input.\\r\\n    /// @return _ethOut : the amount of Eth output\\r\\n    /// @return _yTokenOutSpot : the amount of YToken output based on Spot prrice\\r\\n    /// @return _yTokenOutTwap : the amount of YToken output based on TWAP\\r\\n    /// @return _ethFee : the fee amount in Eth\\r\\n    /// @return _requiredEthBalance : required Eth balance in the pool\\r\\n    function calcRedeem(uint256 _xTokenIn)\\r\\n        public\\r\\n        view\\r\\n        returns (\\r\\n            uint256 _ethOut,\\r\\n            uint256 _yTokenOutSpot,\\r\\n            uint256 _yTokenOutTwap,\\r\\n            uint256 _ethFee,\\r\\n            uint256 _requiredEthBalance\\r\\n        )\\r\\n    {\\r\\n        uint256 _yTokenPrice = oracle.getYTokenPrice();\\r\\n        uint256 _yTokenTWAP = oracle.getYTokenTWAP();\\r\\n        require(_yTokenPrice > 0, \\\"Pool::calcRedeem: Invalid YToken price\\\");\\r\\n\\r\\n        _requiredEthBalance = (_xTokenIn * collateralRatio) / PRECISION;\\r\\n        if (collateralRatio < COLLATERAL_RATIO_MAX) {\\r\\n            _yTokenOutSpot = (_xTokenIn * (COLLATERAL_RATIO_MAX - collateralRatio) * (PRECISION - redemptionFee) * PRICE_PRECISION) / COLLATERAL_RATIO_MAX / PRECISION / _yTokenPrice;\\r\\n            _yTokenOutTwap = (_xTokenIn * (COLLATERAL_RATIO_MAX - collateralRatio) * (PRECISION - redemptionFee) * PRICE_PRECISION) / COLLATERAL_RATIO_MAX / PRECISION / _yTokenTWAP;\\r\\n        }\\r\\n\\r\\n        if (collateralRatio > 0) {\\r\\n            _ethOut = (_xTokenIn * collateralRatio * (PRECISION - redemptionFee)) / COLLATERAL_RATIO_MAX / PRECISION;\\r\\n            _ethFee = (_xTokenIn * collateralRatio * redemptionFee) / COLLATERAL_RATIO_MAX / PRECISION;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice Calculate the excess collateral balance\\r\\n    function calcExcessCollateralBalance() public view returns (uint256 _delta, bool _exceeded) {\\r\\n        uint256 _requiredCollateralBal = (xToken.totalSupply() * collateralRatio) / COLLATERAL_RATIO_MAX;\\r\\n        uint256 _usableCollateralBal = usableCollateralBalance();\\r\\n        if (_usableCollateralBal >= _requiredCollateralBal) {\\r\\n            _delta = _usableCollateralBal - _requiredCollateralBal;\\r\\n            _exceeded = true;\\r\\n        } else {\\r\\n            _delta = _requiredCollateralBal - _usableCollateralBal;\\r\\n            _exceeded = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /* ========== PUBLIC FUNCTIONS ========== */\\r\\n\\r\\n    /// @notice Update collateral ratio and adjust based on the TWAP price of XToken\\r\\n    function refreshCollateralRatio() public {\\r\\n        require(collateralRatioPaused == false, \\\"Pool::refreshCollateralRatio: Collateral Ratio has been paused\\\");\\r\\n        require(block.timestamp - lastRefreshCrTimestamp >= refreshCooldown, \\\"Pool::refreshCollateralRatio: Must wait for the refresh cooldown since last refresh\\\");\\r\\n\\r\\n        uint256 _xTokenPrice = oracle.getXTokenTWAP();\\r\\n        if (_xTokenPrice > priceTarget + priceBand) {\\r\\n            if (collateralRatio <= ratioStepDown) {\\r\\n                collateralRatio = 0;\\r\\n            } else {\\r\\n                uint256 _newCR = collateralRatio - ratioStepDown;\\r\\n                if (_newCR <= minCollateralRatio) {\\r\\n                    collateralRatio = minCollateralRatio;\\r\\n                } else {\\r\\n                    collateralRatio = _newCR;\\r\\n                }\\r\\n            }\\r\\n        } else if (_xTokenPrice < priceTarget - priceBand) {\\r\\n            if (collateralRatio + ratioStepUp >= COLLATERAL_RATIO_MAX) {\\r\\n                collateralRatio = COLLATERAL_RATIO_MAX;\\r\\n            } else {\\r\\n                collateralRatio = collateralRatio + ratioStepUp;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        lastRefreshCrTimestamp = block.timestamp;\\r\\n        emit NewCollateralRatioSet(collateralRatio);\\r\\n    }\\r\\n\\r\\n    /// @notice fallback for payable -> required to unwrap WETH\\r\\n    receive() external payable {}\\r\\n\\r\\n    /* ========== MUTATIVE FUNCTIONS ========== */\\r\\n\\r\\n    function mint(uint256 _minXTokenOut) external payable nonReentrant {\\r\\n        require(!mintPaused, \\\"Pool::mint: Minting is paused\\\");\\r\\n        uint256 _ethIn = msg.value;\\r\\n        address _sender = msg.sender;\\r\\n\\r\\n        (uint256 _xTokenOut, uint256 _yTokenOutTwap, uint256 _fee, uint256 _wethSwapIn) = calcMint(_ethIn);\\r\\n        require(_xTokenOut >= _minXTokenOut, \\\"Pool::mint: > slippage\\\");\\r\\n\\r\\n        WethUtils.wrap(_ethIn);\\r\\n        if (_yTokenOutTwap > 0 && _wethSwapIn > 0) {\\r\\n            WethUtils.weth.safeIncreaseAllowance(address(swapStrategy), _wethSwapIn);\\r\\n            swapStrategy.execute(_wethSwapIn, _yTokenOutTwap);\\r\\n        }\\r\\n\\r\\n        if (_xTokenOut > 0) {\\r\\n            userInfo[_sender].xTokenBalance = userInfo[_sender].xTokenBalance + _xTokenOut;\\r\\n            unclaimedXToken = unclaimedXToken + _xTokenOut;\\r\\n        }\\r\\n\\r\\n        transferToTreasury(_fee);\\r\\n\\r\\n        emit Mint(_sender, _xTokenOut, _ethIn, _fee);\\r\\n    }\\r\\n\\r\\n    function redeem(\\r\\n        uint256 _xTokenIn,\\r\\n        uint256 _minYTokenOut,\\r\\n        uint256 _minEthOut\\r\\n    ) external nonReentrant {\\r\\n        require(!redeemPaused, \\\"Pool::redeem: Redeeming is paused\\\");\\r\\n\\r\\n        address _sender = msg.sender;\\r\\n        (uint256 _ethOut, uint256 _yTokenOutSpot, uint256 _yTokenOutTwap, uint256 _fee, uint256 _requiredEthBalance) = calcRedeem(_xTokenIn);\\r\\n\\r\\n        // Check if collateral balance meets and meet output expectation\\r\\n        require(_requiredEthBalance <= usableCollateralBalance(), \\\"Pool::redeem: > ETH balance\\\");\\r\\n\\r\\n        // Prevent price manipulation to get more yToken\\r\\n        checkPriceFluctuation(_yTokenOutSpot, _yTokenOutTwap);\\r\\n\\r\\n        require(_minEthOut <= _ethOut && _minYTokenOut <= _yTokenOutSpot, \\\"Pool::redeem: >slippage\\\");\\r\\n\\r\\n        if (_ethOut > 0) {\\r\\n            userInfo[_sender].ethBalance = userInfo[_sender].ethBalance + _ethOut;\\r\\n            unclaimedEth = unclaimedEth + _ethOut;\\r\\n        }\\r\\n\\r\\n        if (_yTokenOutSpot > 0) {\\r\\n            userInfo[_sender].yTokenBalance = userInfo[_sender].yTokenBalance + _yTokenOutSpot;\\r\\n            unclaimedYToken = unclaimedYToken + _yTokenOutSpot;\\r\\n        }\\r\\n\\r\\n        userInfo[_sender].lastAction = block.number;\\r\\n\\r\\n        // Move all external functions to the end\\r\\n        xToken.burnFrom(_sender, _xTokenIn);\\r\\n        transferToTreasury(_fee);\\r\\n\\r\\n        emit Redeem(_sender, _xTokenIn, _ethOut, _yTokenOutSpot, _fee);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice collect all minting and redemption\\r\\n     */\\r\\n    function collect() external nonReentrant {\\r\\n        address _sender = msg.sender;\\r\\n        require(userInfo[_sender].lastAction < block.number, \\\"Pool::collect: <minimum_delay\\\");\\r\\n\\r\\n        bool _sendXToken = false;\\r\\n        bool _sendYToken = false;\\r\\n        bool _sendEth = false;\\r\\n        uint256 _xTokenAmount;\\r\\n        uint256 _yTokenAmount;\\r\\n        uint256 _ethAmount;\\r\\n\\r\\n        // Use Checks-Effects-Interactions pattern\\r\\n        if (userInfo[_sender].xTokenBalance > 0) {\\r\\n            _xTokenAmount = userInfo[_sender].xTokenBalance;\\r\\n            userInfo[_sender].xTokenBalance = 0;\\r\\n            unclaimedXToken = unclaimedXToken - _xTokenAmount;\\r\\n            _sendXToken = true;\\r\\n        }\\r\\n\\r\\n        if (userInfo[_sender].yTokenBalance > 0) {\\r\\n            _yTokenAmount = userInfo[_sender].yTokenBalance;\\r\\n            userInfo[_sender].yTokenBalance = 0;\\r\\n            unclaimedYToken = unclaimedYToken - _yTokenAmount;\\r\\n            _sendYToken = true;\\r\\n        }\\r\\n\\r\\n        if (userInfo[_sender].ethBalance > 0) {\\r\\n            _ethAmount = userInfo[_sender].ethBalance;\\r\\n            userInfo[_sender].ethBalance = 0;\\r\\n            unclaimedEth = unclaimedEth - _ethAmount;\\r\\n            _sendEth = true;\\r\\n        }\\r\\n\\r\\n        if (_sendXToken) {\\r\\n            xToken.mint(_sender, _xTokenAmount);\\r\\n        }\\r\\n\\r\\n        if (_sendYToken) {\\r\\n            yTokenReserve.transfer(_sender, _yTokenAmount);\\r\\n        }\\r\\n\\r\\n        if (_sendEth) {\\r\\n            WethUtils.unwrap(_ethAmount);\\r\\n            Address.sendValue(payable(_sender), _ethAmount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice Function to recollateralize the pool by receiving ETH\\r\\n    function recollateralize() external payable {\\r\\n        uint256 _amount = msg.value;\\r\\n        require(_amount > 0, \\\"Pool::recollateralize: Invalid amount\\\");\\r\\n        WethUtils.wrap(_amount);\\r\\n        emit Recollateralized(msg.sender, _amount);\\r\\n    }\\r\\n\\r\\n     function checkPriceFluctuation(uint256 _yAmountSpotPrice, uint256 _yAmountTwap) internal view {\\r\\n        uint256 _diff;\\r\\n        if (_yAmountSpotPrice > _yAmountTwap) {\\r\\n            _diff = _yAmountSpotPrice - _yAmountTwap;\\r\\n        } else {\\r\\n            _diff = _yAmountTwap - _yAmountSpotPrice;\\r\\n        }\\r\\n        require(_diff <= ((_yAmountTwap * yTokenSlippage) / PRECISION), \\\"Pool::checkPriceFluctuation: > yTokenSlippage\\\");\\r\\n    }\\r\\n\\r\\n    /* ========== RESTRICTED FUNCTIONS ========== */\\r\\n\\r\\n    /// @notice Turn on / off minting and redemption\\r\\n    /// @param _mintPaused Paused or NotPaused Minting\\r\\n    /// @param _redeemPaused Paused or NotPaused Redemption\\r\\n    function toggle(bool _mintPaused, bool _redeemPaused) public onlyOwner {\\r\\n        mintPaused = _mintPaused;\\r\\n        redeemPaused = _redeemPaused;\\r\\n        emit Toggled(_mintPaused, _redeemPaused);\\r\\n    }\\r\\n\\r\\n    /// @notice Configure variables related to Collateral Ratio\\r\\n    /// @param _ratioStepUp Step which Collateral Ratio will be increased each updates\\r\\n    /// @param _ratioStepDown Step which Collateral Ratio will be decreased each updates\\r\\n    /// @param _priceBand The collateral ratio will only be adjusted if current price move out of this band\\r\\n    /// @param _refreshCooldown The minimum delay between each Collateral Ratio updates\\r\\n    function setCollateralRatioOptions(\\r\\n        uint256 _ratioStepUp,\\r\\n        uint256 _ratioStepDown,\\r\\n        uint256 _priceBand,\\r\\n        uint256 _refreshCooldown\\r\\n    ) public onlyOwner {\\r\\n        ratioStepUp = _ratioStepUp;\\r\\n        ratioStepDown = _ratioStepDown;\\r\\n        priceBand = _priceBand;\\r\\n        refreshCooldown = _refreshCooldown;\\r\\n        emit NewCollateralRatioOptions(_ratioStepUp, _ratioStepDown, _priceBand, _refreshCooldown);\\r\\n    }\\r\\n\\r\\n    /// @notice Pause or unpause collateral ratio updates\\r\\n    /// @param _collateralRatioPaused `true` or `false`\\r\\n    function toggleCollateralRatio(bool _collateralRatioPaused) public onlyOwner {\\r\\n        if (collateralRatioPaused != _collateralRatioPaused) {\\r\\n            collateralRatioPaused = _collateralRatioPaused;\\r\\n            emit UpdateCollateralRatioPaused(_collateralRatioPaused);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice Set the protocol fees\\r\\n    /// @param _mintingFee Minting fee in percentage\\r\\n    /// @param _redemptionFee Redemption fee in percentage\\r\\n    function setFees(uint256 _mintingFee, uint256 _redemptionFee) public onlyOwner {\\r\\n        require(_mintingFee <= MINTING_FEE_MAX, \\\"Pool::setFees:>MINTING_FEE_MAX\\\");\\r\\n        require(_redemptionFee <= REDEMPTION_FEE_MAX, \\\"Pool::setFees:>REDEMPTION_FEE_MAX\\\");\\r\\n        redemptionFee = _redemptionFee;\\r\\n        mintingFee = _mintingFee;\\r\\n        emit FeesUpdated(_mintingFee, _redemptionFee);\\r\\n    }\\r\\n\\r\\n    /// @notice Set the minimum Collateral Ratio\\r\\n    /// @param _minCollateralRatio value of minimum Collateral Ratio in 1e6 precision\\r\\n    function setMinCollateralRatio(uint256 _minCollateralRatio) external onlyOwner {\\r\\n        require(_minCollateralRatio <= COLLATERAL_RATIO_MAX, \\\"Pool::setMinCollateralRatio: >COLLATERAL_RATIO_MAX\\\");\\r\\n        minCollateralRatio = _minCollateralRatio;\\r\\n        emit MinCollateralRatioUpdated(_minCollateralRatio);\\r\\n    }\\r\\n\\r\\n    /// @notice Transfer the excess balance of WETH to FeeReserve\\r\\n    /// @param _amount amount of WETH to reduce\\r\\n    function reduceExcessCollateral(uint256 _amount) external onlyOwner {\\r\\n        (uint256 _excessWethBal, bool exceeded) = calcExcessCollateralBalance();\\r\\n        if (exceeded && _excessWethBal > 0) {\\r\\n            require(_amount <= _excessWethBal, \\\"Pool::reduceExcessCollateral: The amount is too large\\\");\\r\\n            transferToTreasury(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice Set the address of Swapper utils\\r\\n    /// @param _swapStrategy address of Swapper utils contract\\r\\n    function setSwapStrategy(ISwapStrategy _swapStrategy) external onlyOwner {\\r\\n        require(address(_swapStrategy) != address(0), \\\"Pool::setSwapStrategy: invalid address\\\");\\r\\n        swapStrategy = _swapStrategy;\\r\\n        emit SwapStrategyChanged(address(_swapStrategy));\\r\\n    }\\r\\n\\r\\n    /// @notice Set new oracle address\\r\\n    /// @param _oracle address of the oracle\\r\\n    function setOracle(IMasterOracle _oracle) external onlyOwner {\\r\\n        require(address(_oracle) != address(0), \\\"Pool::setOracle: invalid address\\\");\\r\\n        oracle = _oracle;\\r\\n        emit OracleChanged(address(_oracle));\\r\\n    }\\r\\n\\r\\n    /// @notice Set yTokenSlipage\\r\\n    function setYTokenSlippage(uint256 _slippage) external onlyOwner {\\r\\n        require(_slippage <= 300000, \\\"Pool::setYTokenSlippage: yTokenSlippage cannot be more than 30%\\\");\\r\\n        yTokenSlippage = _slippage;\\r\\n        emit YTokenSlippageSet(_slippage);\\r\\n    }\\r\\n\\r\\n    /// @notice Set the address of Treasury\\r\\n    /// @param _treasury address of Treasury contract\\r\\n    function setTreasury(address _treasury) external {\\r\\n        require(treasury == address(0), \\\"Pool::setTreasury: not allowed\\\");\\r\\n        treasury = _treasury;\\r\\n        emit TreasurySet(_treasury);\\r\\n    }\\r\\n\\r\\n    /// @notice Move weth to treasury\\r\\n    function transferToTreasury(uint256 _amount) internal {\\r\\n        require(treasury != address(0), \\\"Pool::transferToTreasury:Invalid address\\\");\\r\\n        if (_amount > 0) {\\r\\n            WethUtils.weth.safeTransfer(treasury, _amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // EVENTS\\r\\n    event OracleChanged(address indexed _oracle);\\r\\n    event Toggled(bool _mintPaused, bool _redeemPaused);\\r\\n    event Mint(address minter, uint256 amount, uint256 ethIn, uint256 fee);\\r\\n    event Redeem(address redeemer, uint256 amount, uint256 ethOut, uint256 yTokenOut, uint256 fee);\\r\\n    event UpdateCollateralRatioPaused(bool _collateralRatioPaused);\\r\\n    event NewCollateralRatioOptions(uint256 _ratioStepUp, uint256 _ratioStepDown, uint256 _priceBand, uint256 _refreshCooldown);\\r\\n    event MinCollateralRatioUpdated(uint256 _minCollateralRatio);\\r\\n    event NewCollateralRatioSet(uint256 _cr);\\r\\n    event FeesUpdated(uint256 _mintingFee, uint256 _redemptionFee);\\r\\n    event Recollateralized(address indexed _sender, uint256 _amount);\\r\\n    event SwapStrategyChanged(address indexed _swapper);\\r\\n    event TreasurySet(address indexed _treasury);\\r\\n    event YTokenSlippageSet(uint256 _slippage);\\r\\n}\\r\\n\",\"keccak256\":\"0xc3bdbd2b150829d122f65eb340d521be7a1a17c1740293ae29ac226caf664eef\",\"license\":\"MIT\"},\"contracts/interfaces/IMasterOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\ninterface IMasterOracle {\\r\\n    function getXTokenPrice() external view returns (uint256);\\r\\n\\r\\n    function getYTokenPrice() external view returns (uint256);\\r\\n\\r\\n    function getYTokenTWAP() external view returns (uint256);\\r\\n\\r\\n    function getXTokenTWAP() external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xc1b09cdb30104fc9b8ffe290c48606884f474033d30caa7eec3300c8f58cd09b\",\"license\":\"MIT\"},\"contracts/interfaces/ISwapStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\ninterface ISwapStrategy {\\r\\n    function execute(uint256 _wethIn, uint256 _yTokenOut) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x22eca9e6059f82e4d319835890c3c47996b7b96292a3e385d968295bb22c8015\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ninterface IWETH is IERC20 {\\r\\n    function deposit() external payable;\\r\\n\\r\\n    function withdraw(uint256 wad) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xf98652584ed5134c7f7dd6be73ed0987cc812ea8f0ffde7ad9267d682959be56\",\"license\":\"MIT\"},\"contracts/interfaces/IXToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ninterface IXToken is IERC20 {\\r\\n    function burnFrom(address account, uint256 amount) external;\\r\\n\\r\\n    function burn(uint256 _amount) external;\\r\\n\\r\\n    function mint(address _address, uint256 _amount) external;\\r\\n\\r\\n    function setMinter(address _minter) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x5ed80e8841a1d9c07d74a33cd70159870828f2f16340a6a3dfd35972d8e32459\",\"license\":\"MIT\"},\"contracts/interfaces/IYToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ninterface IYToken is IERC20 {\\r\\n    function burn(uint256 _amount) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xcf536e2b997d94442ec7d06cf1acab95b2e55612c42837df71179aba0726cf74\",\"license\":\"MIT\"},\"contracts/interfaces/IYTokenReserve.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\ninterface IYTokenReserve {\\r\\n    function transfer(address _address, uint256 _amount) external;\\r\\n\\r\\n    function setRewarder(address _rewarder) external returns (bool);\\r\\n\\r\\n    function setPool(address _pool) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x9c296a27efa1891c10ce66cf681b24ee2280567abe87e925419f30470a4f16ba\",\"license\":\"MIT\"},\"contracts/libs/WethUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"../interfaces/IWETH.sol\\\";\\r\\n\\r\\nlibrary WethUtils {\\r\\n    using SafeERC20 for IWETH;\\r\\n\\r\\n    IWETH public constant weth = IWETH(0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83); //WFTM\\r\\n\\r\\n    function isWeth(address token) internal pure returns (bool) {\\r\\n        return address(weth) == token;\\r\\n    }\\r\\n\\r\\n    function wrap(uint256 amount) internal {\\r\\n        weth.deposit{value: amount}();\\r\\n    }\\r\\n\\r\\n    function unwrap(uint256 amount) internal {\\r\\n        weth.withdraw(amount);\\r\\n    }\\r\\n\\r\\n    function transfer(address to, uint256 amount) internal {\\r\\n        weth.safeTransfer(to, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1028ebc599bc81ea3d442eb19cd387dfb6bc89b67ad36b7ca8746df63f3d613a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600c805461ffff19169055620f4240600d819055610e10600f556107d06010556103e8601155670de0b6b3a76400006012556611c37937e08000601355601455620186a06015556016805460ff19169055611388601755610bb86018553480156200006e57600080fd5b506040516200300b3803806200300b833981016040819052620000919162000301565b6200009c3362000294565b600180556001600160a01b038316620000eb5760405162461bcd60e51b8152602060048201819052602482015260008051602062002feb83398151915260448201526064015b60405180910390fd5b6001600160a01b038216620001325760405162461bcd60e51b8152602060048201819052602482015260008051602062002feb8339815191526044820152606401620000e2565b6001600160a01b038116620001795760405162461bcd60e51b8152602060048201819052602482015260008051602062002feb8339815191526044820152606401620000e2565b600380546001600160a01b0319166001600160a01b038516908117909155604051637e51dad560e11b815230600482015263fca3b5aa90602401600060405180830381600087803b158015620001ce57600080fd5b505af1158015620001e3573d6000803e3d6000fd5b5050600480546001600160a01b038681166001600160a01b03199283161783556005805491871691909216811790915560405163221b8a9560e11b815230928101929092529250634437152a9150602401602060405180830381600087803b1580156200024f57600080fd5b505af115801562000264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028a91906200034a565b5050505062000373565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620002fc57600080fd5b919050565b60008060006060848603121562000316578283fd5b6200032184620002e4565b92506200033160208501620002e4565b91506200034160408501620002e4565b90509250925092565b6000602082840312156200035c578081fd5b815180151581146200036c578182fd5b9392505050565b612c6880620003836000396000f3fe6080604052600436106102b25760003560e01c80637e4831d311610175578063b8192205116100dc578063e969355f11610095578063f0f442601161006f578063f0f4426014610847578063f2fde38b14610867578063f84dfc6614610887578063f8c32124146108a757600080fd5b8063e969355f146107c9578063ea5f7abe146107e9578063ed21b975146107ff57600080fd5b8063b81922051461071e578063c29118fc1461073e578063c97b49601461075e578063d30013861461077e578063d5d0cb1614610794578063e5225381146107b457600080fd5b80639f1bf63e1161012e5780639f1bf63e14610695578063a0712d68146106ab578063a8508d3e146106be578063a85ebc5c146106d4578063b235d468146106e9578063b4eae1cb1461070857600080fd5b80637e4831d3146105fb5780638088c3181461061557806380fe2b751461063557806384da26661461064b578063868a2724146106615780638da5cb5b1461067757600080fd5b8063458f58151161021957806361d027b3116101d257806361d027b31461053c578063715018a61461055c57806373b82edd146105715780637a991b6d146105915780637adbf973146105bb5780637dc0d1d0146105db57600080fd5b8063458f5815146104a857806349bfcca1146104be5780634bfe4a57146104de5780634ebf4418146104f4578063514330cb146104fc5780635a64ad951461052657600080fd5b80632ebfa5bd1161026b5780632ebfa5bd146103cf578063370158ea146103e5578063370421421461043357806338536275146104535780633e09a95f146104735780634013124a1461049357600080fd5b8063088b699e146102be5780630b68acac146102fb5780630b78f9c01461031f57806310b0e7e8146103415780631959a002146103575780631be626c1146103b957600080fd5b366102b957005b600080fd5b3480156102ca57600080fd5b506003546102de906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561030757600080fd5b5061031160105481565b6040519081526020016102f2565b34801561032b57600080fd5b5061033f61033a366004612a27565b6108bd565b005b34801561034d57600080fd5b5061031160155481565b34801561036357600080fd5b5061039961037236600461296b565b60086020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016102f2565b3480156103c557600080fd5b5061031160095481565b3480156103db57600080fd5b50610311600a5481565b3480156103f157600080fd5b506103fa6109e6565b60408051978852602088019690965294860193909352606085019190915215156080840152151560a083015260c082015260e0016102f2565b34801561043f57600080fd5b506005546102de906001600160a01b031681565b34801561045f57600080fd5b5061033f61046e3660046129f7565b610a16565b34801561047f57600080fd5b5061033f61048e36600461296b565b610aea565b34801561049f57600080fd5b5061033f610bc3565b3480156104b457600080fd5b5061031160175481565b3480156104ca57600080fd5b506004546102de906001600160a01b031681565b3480156104ea57600080fd5b5061031161232881565b61033f610e42565b34801561050857600080fd5b50610511610edf565b604080519283529015156020830152016102f2565b34801561053257600080fd5b5061031160185481565b34801561054857600080fd5b506007546102de906001600160a01b031681565b34801561056857600080fd5b5061033f610fc6565b34801561057d57600080fd5b5061033f61058c366004612a73565b610ffc565b34801561059d57600080fd5b506016546105ab9060ff1681565b60405190151581526020016102f2565b3480156105c757600080fd5b5061033f6105d636600461296b565b611088565b3480156105e757600080fd5b506002546102de906001600160a01b031681565b34801561060757600080fd5b50600c546105ab9060ff1681565b34801561062157600080fd5b506006546102de906001600160a01b031681565b34801561064157600080fd5b5061031160115481565b34801561065757600080fd5b5061031160145481565b34801561066d57600080fd5b50610311600e5481565b34801561068357600080fd5b506000546001600160a01b03166102de565b3480156106a157600080fd5b5061031160135481565b61033f6106b93660046129f7565b611152565b3480156106ca57600080fd5b5061031160125481565b3480156106e057600080fd5b5061031161139a565b3480156106f557600080fd5b50600c546105ab90610100900460ff1681565b34801561071457600080fd5b50610311600d5481565b34801561072a57600080fd5b5061033f610739366004612a48565b611446565b34801561074a57600080fd5b5061033f6107593660046129bf565b61174a565b34801561076a57600080fd5b5061033f6107793660046129f7565b6117d0565b34801561078a57600080fd5b50610311600b5481565b3480156107a057600080fd5b5061033f6107af366004612987565b6118a8565b3480156107c057600080fd5b5061033f611926565b3480156107d557600080fd5b5061033f6107e43660046129f7565b611bbf565b3480156107f557600080fd5b50610311600f5481565b34801561080b57600080fd5b5061081f61081a3660046129f7565b611c86565b604080519586526020860194909452928401919091526060830152608082015260a0016102f2565b34801561085357600080fd5b5061033f61086236600461296b565b611f95565b34801561087357600080fd5b5061033f61088236600461296b565b612038565b34801561089357600080fd5b506103996108a23660046129f7565b6120d0565b3480156108b357600080fd5b5061031161138881565b6000546001600160a01b031633146108f05760405162461bcd60e51b81526004016108e790612af3565b60405180910390fd5b6113888211156109425760405162461bcd60e51b815260206004820152601e60248201527f506f6f6c3a3a736574466565733a3e4d494e54494e475f4645455f4d4158000060448201526064016108e7565b61232881111561099e5760405162461bcd60e51b815260206004820152602160248201527f506f6f6c3a3a736574466565733a3e524544454d5054494f4e5f4645455f4d416044820152600b60fb1b60648201526084016108e7565b6017819055601882905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a191015b60405180910390a15050565b600d54600e54601854601754600c5460ff808216916101009004166000610a0b61139a565b905090919293949596565b6000546001600160a01b03163314610a405760405162461bcd60e51b81526004016108e790612af3565b620f4240811115610aae5760405162461bcd60e51b815260206004820152603260248201527f506f6f6c3a3a7365744d696e436f6c6c61746572616c526174696f3a203e434f6044820152710989882a88aa48298bea482a8929ebe9a82b60731b60648201526084016108e7565b60148190556040518181527f5982e574cb778844329684a34107b512e3a2413a153fc02af924390158148c6f906020015b60405180910390a150565b6000546001600160a01b03163314610b145760405162461bcd60e51b81526004016108e790612af3565b6001600160a01b038116610b795760405162461bcd60e51b815260206004820152602660248201527f506f6f6c3a3a7365745377617053747261746567793a20696e76616c6964206160448201526564647265737360d01b60648201526084016108e7565b600680546001600160a01b0319166001600160a01b0383169081179091556040517ff42b2d6189f0c63bb22abb0ec7e0e9d32a43085515d7256a8a0786989e7f38fa90600090a250565b60165460ff1615610c3c5760405162461bcd60e51b815260206004820152603e60248201527f506f6f6c3a3a72656672657368436f6c6c61746572616c526174696f3a20436f60448201527f6c6c61746572616c20526174696f20686173206265656e20706175736564000060648201526084016108e7565b600f54600e54610c4c9042612bb6565b1015610cdc5760405162461bcd60e51b815260206004820152605360248201527f506f6f6c3a3a72656672657368436f6c6c61746572616c526174696f3a204d7560448201527f7374207761697420666f7220746865207265667265736820636f6f6c646f776e606482015272040e6d2dcc6ca40d8c2e6e840e4cacce4cae6d606b1b608482015260a4016108e7565b60025460408051631819cc4760e31b815290516000926001600160a01b03169163c0ce6238916004808301926020929190829003018186803b158015610d2157600080fd5b505afa158015610d35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d599190612a0f565b9050601354601254610d6b9190612b5f565b811115610dbb57601154600d5411610d87576000600d55610e0b565b6000601154600d54610d999190612bb6565b90506014548111610daf57601454600d55610db5565b600d8190555b50610e0b565b601354601254610dcb9190612bb6565b811015610e0b57620f4240601054600d54610de69190612b5f565b10610df757620f4240600d55610e0b565b601054600d54610e079190612b5f565b600d555b42600e55600d546040519081527f43dd06cd14239ec6c5a1b4ea9c2def7d8940aeda88ead0ab6fb960ce3c3c412d90602001610adf565b3480610e9e5760405162461bcd60e51b815260206004820152602560248201527f506f6f6c3a3a7265636f6c6c61746572616c697a653a20496e76616c696420616044820152641b5bdd5b9d60da1b60648201526084016108e7565b610ea78161226c565b60405181815233907fbcce792384bcc41455f8efeface08ee7880d3a4264ada39bb979554fd5985d609060200160405180910390a250565b6000806000620f4240600d54600360009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f3957600080fd5b505afa158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f719190612a0f565b610f7b9190612b97565b610f859190612b77565b90506000610f9161139a565b9050818110610faf57610fa48282612bb6565b935060019250610fc0565b610fb98183612bb6565b9350600092505b50509091565b6000546001600160a01b03163314610ff05760405162461bcd60e51b81526004016108e790612af3565b610ffa60006122d7565b565b6000546001600160a01b031633146110265760405162461bcd60e51b81526004016108e790612af3565b601084905560118390556013829055600f8190556040805185815260208101859052908101839052606081018290527f038f57571f57da47bfdd27bbcac94efe4d37d76fc9711fbeb5e68e75bc8243049060800160405180910390a150505050565b6000546001600160a01b031633146110b25760405162461bcd60e51b81526004016108e790612af3565b6001600160a01b0381166111085760405162461bcd60e51b815260206004820181905260248201527f506f6f6c3a3a7365744f7261636c653a20696e76616c6964206164647265737360448201526064016108e7565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f0e05ae75e8b926552cf6fcd744d19f422561e3ced1e426868730852702dbe41890600090a250565b600260015414156111755760405162461bcd60e51b81526004016108e790612b28565b6002600155600c5460ff16156111cd5760405162461bcd60e51b815260206004820152601d60248201527f506f6f6c3a3a6d696e743a204d696e74696e672069732070617573656400000060448201526064016108e7565b343360008080806111dd866120d0565b93509350935093508684101561122e5760405162461bcd60e51b8152602060048201526016602482015275506f6f6c3a3a6d696e743a203e20736c69707061676560501b60448201526064016108e7565b6112378661226c565b6000831180156112475750600081115b156112de57600654611278907321be370d5312f44cb42ce377bc9b8a0cef1a4c83906001600160a01b031683612327565b600654604051632b00f57560e11b815260048101839052602481018590526001600160a01b0390911690635601eaea90604401600060405180830381600087803b1580156112c557600080fd5b505af11580156112d9573d6000803e3d6000fd5b505050505b8315611333576001600160a01b038516600090815260086020526040902054611308908590612b5f565b6001600160a01b038616600090815260086020526040902055600a5461132f908590612b5f565b600a555b61133c82612421565b604080516001600160a01b038716815260208101869052908101879052606081018390527fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb9060800160405180910390a15050600180555050505050565b6040516370a0823160e01b815230600482015260009081907321be370d5312f44cb42ce377bc9b8a0cef1a4c83906370a082319060240160206040518083038186803b1580156113e957600080fd5b505afa1580156113fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114219190612a0f565b90506009548111611433576000611440565b6009546114409082612bb6565b91505090565b600260015414156114695760405162461bcd60e51b81526004016108e790612b28565b6002600155600c54610100900460ff16156114d05760405162461bcd60e51b815260206004820152602160248201527f506f6f6c3a3a72656465656d3a2052656465656d696e672069732070617573656044820152601960fa1b60648201526084016108e7565b336000808080806114e089611c86565b945094509450945094506114f261139a565b8111156115415760405162461bcd60e51b815260206004820152601b60248201527f506f6f6c3a3a72656465656d3a203e204554482062616c616e6365000000000060448201526064016108e7565b61154b84846124bc565b84871115801561155b5750838811155b6115a75760405162461bcd60e51b815260206004820152601760248201527f506f6f6c3a3a72656465656d3a203e736c69707061676500000000000000000060448201526064016108e7565b8415611602576001600160a01b0386166000908152600860205260409020600201546115d4908690612b5f565b6001600160a01b0387166000908152600860205260409020600201556009546115fe908690612b5f565b6009555b831561165d576001600160a01b03861660009081526008602052604090206001015461162f908590612b5f565b6001600160a01b038716600090815260086020526040902060010155600b54611659908590612b5f565b600b555b6001600160a01b03868116600081815260086020526040908190204360039182015554905163079cc67960e41b81526004810192909252602482018c9052909116906379cc679090604401600060405180830381600087803b1580156116c257600080fd5b505af11580156116d6573d6000803e3d6000fd5b505050506116e382612421565b604080516001600160a01b0388168152602081018b905290810186905260608101859052608081018390527fe02f6383e19e87c24e0c03e2cd5dbd05156cb29a1b0f3dbca1fa3430e444f63d9060a00160405180910390a150506001805550505050505050565b6000546001600160a01b031633146117745760405162461bcd60e51b81526004016108e790612af3565b600c8054821515610100810261ff001986151590811661ffff1990941693909317179092556040805191825260208201929092527fe4e2759610fe740b4c8247147491ae3e248b92fb63181dc697aff6faf00f65d791016109da565b6000546001600160a01b031633146117fa5760405162461bcd60e51b81526004016108e790612af3565b620493e08111156118735760405162461bcd60e51b815260206004820152603f60248201527f506f6f6c3a3a73657459546f6b656e536c6970706167653a2079546f6b656e5360448201527f6c6970706167652063616e6e6f74206265206d6f7265207468616e203330250060648201526084016108e7565b60158190556040518181527fd86c2dfaa734f6aef8a960c73c2d669e130018cc4f61aeb1f115c64844a96e0a90602001610adf565b6000546001600160a01b031633146118d25760405162461bcd60e51b81526004016108e790612af3565b60165460ff16151581151514611923576016805460ff19168215159081179091556040519081527fe9b03f52b6ce464fd3d6eec943f0c67d7575005f3b0bbf2fad4ea38b4ed7208490602001610adf565b50565b600260015414156119495760405162461bcd60e51b81526004016108e790612b28565b60026001553360008181526008602052604090206003015443116119af5760405162461bcd60e51b815260206004820152601d60248201527f506f6f6c3a3a636f6c6c6563743a203c6d696e696d756d5f64656c617900000060448201526064016108e7565b6001600160a01b0381166000908152600860205260408120548190819081908190819015611a0d576001600160a01b03871660009081526008602052604081208054919055600a54909350611a05908490612bb6565b600a55600195505b6001600160a01b03871660009081526008602052604090206001015415611a67576001600160a01b03871660009081526008602052604081206001018054919055600b54909250611a5f908390612bb6565b600b55600194505b6001600160a01b03871660009081526008602052604090206002015415611abf57506001600160a01b03861660009081526008602052604081206002018054919055600954611ab7908290612bb6565b600955600193505b8515611b2c576003546040516340c10f1960e01b81526001600160a01b03898116600483015260248201869052909116906340c10f1990604401600060405180830381600087803b158015611b1357600080fd5b505af1158015611b27573d6000803e3d6000fd5b505050505b8415611b995760055460405163a9059cbb60e01b81526001600160a01b038981166004830152602482018590529091169063a9059cbb90604401600060405180830381600087803b158015611b8057600080fd5b505af1158015611b94573d6000803e3d6000fd5b505050505b8315611bb257611ba881612565565b611bb287826125cd565b5050600180555050505050565b6000546001600160a01b03163314611be95760405162461bcd60e51b81526004016108e790612af3565b600080611bf4610edf565b91509150808015611c055750600082115b15611c815781831115611c785760405162461bcd60e51b815260206004820152603560248201527f506f6f6c3a3a726564756365457863657373436f6c6c61746572616c3a2054686044820152746520616d6f756e7420697320746f6f206c6172676560581b60648201526084016108e7565b611c8183612421565b505050565b600080600080600080600260009054906101000a90046001600160a01b03166001600160a01b0316636e16399c6040518163ffffffff1660e01b815260040160206040518083038186803b158015611cdd57600080fd5b505afa158015611cf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d159190612a0f565b90506000600260009054906101000a90046001600160a01b03166001600160a01b0316635f4370a56040518163ffffffff1660e01b815260040160206040518083038186803b158015611d6757600080fd5b505afa158015611d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9f9190612a0f565b905060008211611e005760405162461bcd60e51b815260206004820152602660248201527f506f6f6c3a3a63616c6352656465656d3a20496e76616c69642059546f6b656e60448201526520707269636560d01b60648201526084016108e7565b620f4240600d5489611e129190612b97565b611e1c9190612b77565b9250620f4240600d541015611f085781620f424080670de0b6b3a7640000601754620f4240611e4b9190612bb6565b600d54611e5b90620f4240612bb6565b611e65908e612b97565b611e6f9190612b97565b611e799190612b97565b611e839190612b77565b611e8d9190612b77565b611e979190612b77565b955080620f424080670de0b6b3a7640000601754620f4240611eb99190612bb6565b600d54611ec990620f4240612bb6565b611ed3908e612b97565b611edd9190612b97565b611ee79190612b97565b611ef19190612b77565b611efb9190612b77565b611f059190612b77565b94505b600d5415611f8a57620f424080601754620f4240611f269190612bb6565b600d54611f33908c612b97565b611f3d9190612b97565b611f479190612b77565b611f519190612b77565b9650620f424080601754600d548b611f699190612b97565b611f739190612b97565b611f7d9190612b77565b611f879190612b77565b93505b505091939590929450565b6007546001600160a01b031615611fee5760405162461bcd60e51b815260206004820152601e60248201527f506f6f6c3a3a73657454726561737572793a206e6f7420616c6c6f776564000060448201526064016108e7565b600780546001600160a01b0319166001600160a01b0383169081179091556040517f3c864541ef71378c6229510ed90f376565ee42d9c5e0904a984a9e863e6db44f90600090a250565b6000546001600160a01b031633146120625760405162461bcd60e51b81526004016108e790612af3565b6001600160a01b0381166120c75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108e7565b611923816122d7565b6000806000806000600260009054906101000a90046001600160a01b03166001600160a01b0316635f4370a56040518163ffffffff1660e01b815260040160206040518083038186803b15801561212657600080fd5b505afa15801561213a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215e9190612a0f565b9050600081116121bc5760405162461bcd60e51b8152602060048201526024808201527f506f6f6c3a3a63616c634d696e743a20496e76616c69642059546f6b656e20706044820152637269636560e01b60648201526084016108e7565b620f4240600d54620f42406121d19190612bb6565b6121db9088612b97565b6121e59190612b77565b9150806121fa670de0b6b3a764000084612b97565b6122049190612b77565b9350620f424080600d546018548961221c9190612b97565b6122269190612b97565b6122309190612b77565b61223a9190612b77565b9250620f42406018548761224e9190612b97565b6122589190612b77565b6122629087612bb6565b9450509193509193565b7321be370d5312f44cb42ce377bc9b8a0cef1a4c836001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156122bb57600080fd5b505af11580156122cf573d6000803e3d6000fd5b505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561237357600080fd5b505afa158015612387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ab9190612a0f565b6123b59190612b5f565b6040516001600160a01b03851660248201526044810182905290915061241b90859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526126e6565b50505050565b6007546001600160a01b031661248a5760405162461bcd60e51b815260206004820152602860248201527f506f6f6c3a3a7472616e73666572546f54726561737572793a496e76616c6964604482015267206164647265737360c01b60648201526084016108e7565b801561192357600754611923907321be370d5312f44cb42ce377bc9b8a0cef1a4c83906001600160a01b0316836127b8565b6000818311156124d7576124d08284612bb6565b90506124e4565b6124e18383612bb6565b90505b620f4240601554836124f69190612b97565b6125009190612b77565b811115611c815760405162461bcd60e51b815260206004820152602d60248201527f506f6f6c3a3a636865636b5072696365466c756374756174696f6e3a203e207960448201526c546f6b656e536c69707061676560981b60648201526084016108e7565b604051632e1a7d4d60e01b8152600481018290527321be370d5312f44cb42ce377bc9b8a0cef1a4c8390632e1a7d4d90602401600060405180830381600087803b1580156125b257600080fd5b505af11580156125c6573d6000803e3d6000fd5b5050505050565b8047101561261d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016108e7565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461266a576040519150601f19603f3d011682016040523d82523d6000602084013e61266f565b606091505b5050905080611c815760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016108e7565b600061273b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127e89092919063ffffffff16565b805190915015611c81578080602001905181019061275991906129a3565b611c815760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108e7565b6040516001600160a01b038316602482015260448101829052611c8190849063a9059cbb60e01b906064016123e4565b60606127f78484600085612801565b90505b9392505050565b6060824710156128625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016108e7565b6001600160a01b0385163b6128b95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108e7565b600080866001600160a01b031685876040516128d59190612aa4565b60006040518083038185875af1925050503d8060008114612912576040519150601f19603f3d011682016040523d82523d6000602084013e612917565b606091505b5091509150612927828286612932565b979650505050505050565b606083156129415750816127fa565b8251156129515782518084602001fd5b8160405162461bcd60e51b81526004016108e79190612ac0565b60006020828403121561297c578081fd5b81356127fa81612c0f565b600060208284031215612998578081fd5b81356127fa81612c24565b6000602082840312156129b4578081fd5b81516127fa81612c24565b600080604083850312156129d1578081fd5b82356129dc81612c24565b915060208301356129ec81612c24565b809150509250929050565b600060208284031215612a08578081fd5b5035919050565b600060208284031215612a20578081fd5b5051919050565b60008060408385031215612a39578182fd5b50508035926020909101359150565b600080600060608486031215612a5c578081fd5b505081359360208301359350604090920135919050565b60008060008060808587031215612a88578081fd5b5050823594602084013594506040840135936060013592509050565b60008251612ab6818460208701612bcd565b9190910192915050565b6020815260008251806020840152612adf816040850160208701612bcd565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115612b7257612b72612bf9565b500190565b600082612b9257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612bb157612bb1612bf9565b500290565b600082821015612bc857612bc8612bf9565b500390565b60005b83811015612be8578181015183820152602001612bd0565b8381111561241b5750506000910152565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461192357600080fd5b801515811461192357600080fdfea2646970667358221220131929c82f1f3a5cdb3b48ab6f81cea3040c85f957dcd70ede7db0d5f790636864736f6c63430008040033506f6f6c3a3a696e697469616c697a653a20696e76616c696441646472657373",
  "deployedBytecode": "0x6080604052600436106102b25760003560e01c80637e4831d311610175578063b8192205116100dc578063e969355f11610095578063f0f442601161006f578063f0f4426014610847578063f2fde38b14610867578063f84dfc6614610887578063f8c32124146108a757600080fd5b8063e969355f146107c9578063ea5f7abe146107e9578063ed21b975146107ff57600080fd5b8063b81922051461071e578063c29118fc1461073e578063c97b49601461075e578063d30013861461077e578063d5d0cb1614610794578063e5225381146107b457600080fd5b80639f1bf63e1161012e5780639f1bf63e14610695578063a0712d68146106ab578063a8508d3e146106be578063a85ebc5c146106d4578063b235d468146106e9578063b4eae1cb1461070857600080fd5b80637e4831d3146105fb5780638088c3181461061557806380fe2b751461063557806384da26661461064b578063868a2724146106615780638da5cb5b1461067757600080fd5b8063458f58151161021957806361d027b3116101d257806361d027b31461053c578063715018a61461055c57806373b82edd146105715780637a991b6d146105915780637adbf973146105bb5780637dc0d1d0146105db57600080fd5b8063458f5815146104a857806349bfcca1146104be5780634bfe4a57146104de5780634ebf4418146104f4578063514330cb146104fc5780635a64ad951461052657600080fd5b80632ebfa5bd1161026b5780632ebfa5bd146103cf578063370158ea146103e5578063370421421461043357806338536275146104535780633e09a95f146104735780634013124a1461049357600080fd5b8063088b699e146102be5780630b68acac146102fb5780630b78f9c01461031f57806310b0e7e8146103415780631959a002146103575780631be626c1146103b957600080fd5b366102b957005b600080fd5b3480156102ca57600080fd5b506003546102de906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561030757600080fd5b5061031160105481565b6040519081526020016102f2565b34801561032b57600080fd5b5061033f61033a366004612a27565b6108bd565b005b34801561034d57600080fd5b5061031160155481565b34801561036357600080fd5b5061039961037236600461296b565b60086020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016102f2565b3480156103c557600080fd5b5061031160095481565b3480156103db57600080fd5b50610311600a5481565b3480156103f157600080fd5b506103fa6109e6565b60408051978852602088019690965294860193909352606085019190915215156080840152151560a083015260c082015260e0016102f2565b34801561043f57600080fd5b506005546102de906001600160a01b031681565b34801561045f57600080fd5b5061033f61046e3660046129f7565b610a16565b34801561047f57600080fd5b5061033f61048e36600461296b565b610aea565b34801561049f57600080fd5b5061033f610bc3565b3480156104b457600080fd5b5061031160175481565b3480156104ca57600080fd5b506004546102de906001600160a01b031681565b3480156104ea57600080fd5b5061031161232881565b61033f610e42565b34801561050857600080fd5b50610511610edf565b604080519283529015156020830152016102f2565b34801561053257600080fd5b5061031160185481565b34801561054857600080fd5b506007546102de906001600160a01b031681565b34801561056857600080fd5b5061033f610fc6565b34801561057d57600080fd5b5061033f61058c366004612a73565b610ffc565b34801561059d57600080fd5b506016546105ab9060ff1681565b60405190151581526020016102f2565b3480156105c757600080fd5b5061033f6105d636600461296b565b611088565b3480156105e757600080fd5b506002546102de906001600160a01b031681565b34801561060757600080fd5b50600c546105ab9060ff1681565b34801561062157600080fd5b506006546102de906001600160a01b031681565b34801561064157600080fd5b5061031160115481565b34801561065757600080fd5b5061031160145481565b34801561066d57600080fd5b50610311600e5481565b34801561068357600080fd5b506000546001600160a01b03166102de565b3480156106a157600080fd5b5061031160135481565b61033f6106b93660046129f7565b611152565b3480156106ca57600080fd5b5061031160125481565b3480156106e057600080fd5b5061031161139a565b3480156106f557600080fd5b50600c546105ab90610100900460ff1681565b34801561071457600080fd5b50610311600d5481565b34801561072a57600080fd5b5061033f610739366004612a48565b611446565b34801561074a57600080fd5b5061033f6107593660046129bf565b61174a565b34801561076a57600080fd5b5061033f6107793660046129f7565b6117d0565b34801561078a57600080fd5b50610311600b5481565b3480156107a057600080fd5b5061033f6107af366004612987565b6118a8565b3480156107c057600080fd5b5061033f611926565b3480156107d557600080fd5b5061033f6107e43660046129f7565b611bbf565b3480156107f557600080fd5b50610311600f5481565b34801561080b57600080fd5b5061081f61081a3660046129f7565b611c86565b604080519586526020860194909452928401919091526060830152608082015260a0016102f2565b34801561085357600080fd5b5061033f61086236600461296b565b611f95565b34801561087357600080fd5b5061033f61088236600461296b565b612038565b34801561089357600080fd5b506103996108a23660046129f7565b6120d0565b3480156108b357600080fd5b5061031161138881565b6000546001600160a01b031633146108f05760405162461bcd60e51b81526004016108e790612af3565b60405180910390fd5b6113888211156109425760405162461bcd60e51b815260206004820152601e60248201527f506f6f6c3a3a736574466565733a3e4d494e54494e475f4645455f4d4158000060448201526064016108e7565b61232881111561099e5760405162461bcd60e51b815260206004820152602160248201527f506f6f6c3a3a736574466565733a3e524544454d5054494f4e5f4645455f4d416044820152600b60fb1b60648201526084016108e7565b6017819055601882905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a191015b60405180910390a15050565b600d54600e54601854601754600c5460ff808216916101009004166000610a0b61139a565b905090919293949596565b6000546001600160a01b03163314610a405760405162461bcd60e51b81526004016108e790612af3565b620f4240811115610aae5760405162461bcd60e51b815260206004820152603260248201527f506f6f6c3a3a7365744d696e436f6c6c61746572616c526174696f3a203e434f6044820152710989882a88aa48298bea482a8929ebe9a82b60731b60648201526084016108e7565b60148190556040518181527f5982e574cb778844329684a34107b512e3a2413a153fc02af924390158148c6f906020015b60405180910390a150565b6000546001600160a01b03163314610b145760405162461bcd60e51b81526004016108e790612af3565b6001600160a01b038116610b795760405162461bcd60e51b815260206004820152602660248201527f506f6f6c3a3a7365745377617053747261746567793a20696e76616c6964206160448201526564647265737360d01b60648201526084016108e7565b600680546001600160a01b0319166001600160a01b0383169081179091556040517ff42b2d6189f0c63bb22abb0ec7e0e9d32a43085515d7256a8a0786989e7f38fa90600090a250565b60165460ff1615610c3c5760405162461bcd60e51b815260206004820152603e60248201527f506f6f6c3a3a72656672657368436f6c6c61746572616c526174696f3a20436f60448201527f6c6c61746572616c20526174696f20686173206265656e20706175736564000060648201526084016108e7565b600f54600e54610c4c9042612bb6565b1015610cdc5760405162461bcd60e51b815260206004820152605360248201527f506f6f6c3a3a72656672657368436f6c6c61746572616c526174696f3a204d7560448201527f7374207761697420666f7220746865207265667265736820636f6f6c646f776e606482015272040e6d2dcc6ca40d8c2e6e840e4cacce4cae6d606b1b608482015260a4016108e7565b60025460408051631819cc4760e31b815290516000926001600160a01b03169163c0ce6238916004808301926020929190829003018186803b158015610d2157600080fd5b505afa158015610d35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d599190612a0f565b9050601354601254610d6b9190612b5f565b811115610dbb57601154600d5411610d87576000600d55610e0b565b6000601154600d54610d999190612bb6565b90506014548111610daf57601454600d55610db5565b600d8190555b50610e0b565b601354601254610dcb9190612bb6565b811015610e0b57620f4240601054600d54610de69190612b5f565b10610df757620f4240600d55610e0b565b601054600d54610e079190612b5f565b600d555b42600e55600d546040519081527f43dd06cd14239ec6c5a1b4ea9c2def7d8940aeda88ead0ab6fb960ce3c3c412d90602001610adf565b3480610e9e5760405162461bcd60e51b815260206004820152602560248201527f506f6f6c3a3a7265636f6c6c61746572616c697a653a20496e76616c696420616044820152641b5bdd5b9d60da1b60648201526084016108e7565b610ea78161226c565b60405181815233907fbcce792384bcc41455f8efeface08ee7880d3a4264ada39bb979554fd5985d609060200160405180910390a250565b6000806000620f4240600d54600360009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f3957600080fd5b505afa158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f719190612a0f565b610f7b9190612b97565b610f859190612b77565b90506000610f9161139a565b9050818110610faf57610fa48282612bb6565b935060019250610fc0565b610fb98183612bb6565b9350600092505b50509091565b6000546001600160a01b03163314610ff05760405162461bcd60e51b81526004016108e790612af3565b610ffa60006122d7565b565b6000546001600160a01b031633146110265760405162461bcd60e51b81526004016108e790612af3565b601084905560118390556013829055600f8190556040805185815260208101859052908101839052606081018290527f038f57571f57da47bfdd27bbcac94efe4d37d76fc9711fbeb5e68e75bc8243049060800160405180910390a150505050565b6000546001600160a01b031633146110b25760405162461bcd60e51b81526004016108e790612af3565b6001600160a01b0381166111085760405162461bcd60e51b815260206004820181905260248201527f506f6f6c3a3a7365744f7261636c653a20696e76616c6964206164647265737360448201526064016108e7565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f0e05ae75e8b926552cf6fcd744d19f422561e3ced1e426868730852702dbe41890600090a250565b600260015414156111755760405162461bcd60e51b81526004016108e790612b28565b6002600155600c5460ff16156111cd5760405162461bcd60e51b815260206004820152601d60248201527f506f6f6c3a3a6d696e743a204d696e74696e672069732070617573656400000060448201526064016108e7565b343360008080806111dd866120d0565b93509350935093508684101561122e5760405162461bcd60e51b8152602060048201526016602482015275506f6f6c3a3a6d696e743a203e20736c69707061676560501b60448201526064016108e7565b6112378661226c565b6000831180156112475750600081115b156112de57600654611278907321be370d5312f44cb42ce377bc9b8a0cef1a4c83906001600160a01b031683612327565b600654604051632b00f57560e11b815260048101839052602481018590526001600160a01b0390911690635601eaea90604401600060405180830381600087803b1580156112c557600080fd5b505af11580156112d9573d6000803e3d6000fd5b505050505b8315611333576001600160a01b038516600090815260086020526040902054611308908590612b5f565b6001600160a01b038616600090815260086020526040902055600a5461132f908590612b5f565b600a555b61133c82612421565b604080516001600160a01b038716815260208101869052908101879052606081018390527fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb9060800160405180910390a15050600180555050505050565b6040516370a0823160e01b815230600482015260009081907321be370d5312f44cb42ce377bc9b8a0cef1a4c83906370a082319060240160206040518083038186803b1580156113e957600080fd5b505afa1580156113fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114219190612a0f565b90506009548111611433576000611440565b6009546114409082612bb6565b91505090565b600260015414156114695760405162461bcd60e51b81526004016108e790612b28565b6002600155600c54610100900460ff16156114d05760405162461bcd60e51b815260206004820152602160248201527f506f6f6c3a3a72656465656d3a2052656465656d696e672069732070617573656044820152601960fa1b60648201526084016108e7565b336000808080806114e089611c86565b945094509450945094506114f261139a565b8111156115415760405162461bcd60e51b815260206004820152601b60248201527f506f6f6c3a3a72656465656d3a203e204554482062616c616e6365000000000060448201526064016108e7565b61154b84846124bc565b84871115801561155b5750838811155b6115a75760405162461bcd60e51b815260206004820152601760248201527f506f6f6c3a3a72656465656d3a203e736c69707061676500000000000000000060448201526064016108e7565b8415611602576001600160a01b0386166000908152600860205260409020600201546115d4908690612b5f565b6001600160a01b0387166000908152600860205260409020600201556009546115fe908690612b5f565b6009555b831561165d576001600160a01b03861660009081526008602052604090206001015461162f908590612b5f565b6001600160a01b038716600090815260086020526040902060010155600b54611659908590612b5f565b600b555b6001600160a01b03868116600081815260086020526040908190204360039182015554905163079cc67960e41b81526004810192909252602482018c9052909116906379cc679090604401600060405180830381600087803b1580156116c257600080fd5b505af11580156116d6573d6000803e3d6000fd5b505050506116e382612421565b604080516001600160a01b0388168152602081018b905290810186905260608101859052608081018390527fe02f6383e19e87c24e0c03e2cd5dbd05156cb29a1b0f3dbca1fa3430e444f63d9060a00160405180910390a150506001805550505050505050565b6000546001600160a01b031633146117745760405162461bcd60e51b81526004016108e790612af3565b600c8054821515610100810261ff001986151590811661ffff1990941693909317179092556040805191825260208201929092527fe4e2759610fe740b4c8247147491ae3e248b92fb63181dc697aff6faf00f65d791016109da565b6000546001600160a01b031633146117fa5760405162461bcd60e51b81526004016108e790612af3565b620493e08111156118735760405162461bcd60e51b815260206004820152603f60248201527f506f6f6c3a3a73657459546f6b656e536c6970706167653a2079546f6b656e5360448201527f6c6970706167652063616e6e6f74206265206d6f7265207468616e203330250060648201526084016108e7565b60158190556040518181527fd86c2dfaa734f6aef8a960c73c2d669e130018cc4f61aeb1f115c64844a96e0a90602001610adf565b6000546001600160a01b031633146118d25760405162461bcd60e51b81526004016108e790612af3565b60165460ff16151581151514611923576016805460ff19168215159081179091556040519081527fe9b03f52b6ce464fd3d6eec943f0c67d7575005f3b0bbf2fad4ea38b4ed7208490602001610adf565b50565b600260015414156119495760405162461bcd60e51b81526004016108e790612b28565b60026001553360008181526008602052604090206003015443116119af5760405162461bcd60e51b815260206004820152601d60248201527f506f6f6c3a3a636f6c6c6563743a203c6d696e696d756d5f64656c617900000060448201526064016108e7565b6001600160a01b0381166000908152600860205260408120548190819081908190819015611a0d576001600160a01b03871660009081526008602052604081208054919055600a54909350611a05908490612bb6565b600a55600195505b6001600160a01b03871660009081526008602052604090206001015415611a67576001600160a01b03871660009081526008602052604081206001018054919055600b54909250611a5f908390612bb6565b600b55600194505b6001600160a01b03871660009081526008602052604090206002015415611abf57506001600160a01b03861660009081526008602052604081206002018054919055600954611ab7908290612bb6565b600955600193505b8515611b2c576003546040516340c10f1960e01b81526001600160a01b03898116600483015260248201869052909116906340c10f1990604401600060405180830381600087803b158015611b1357600080fd5b505af1158015611b27573d6000803e3d6000fd5b505050505b8415611b995760055460405163a9059cbb60e01b81526001600160a01b038981166004830152602482018590529091169063a9059cbb90604401600060405180830381600087803b158015611b8057600080fd5b505af1158015611b94573d6000803e3d6000fd5b505050505b8315611bb257611ba881612565565b611bb287826125cd565b5050600180555050505050565b6000546001600160a01b03163314611be95760405162461bcd60e51b81526004016108e790612af3565b600080611bf4610edf565b91509150808015611c055750600082115b15611c815781831115611c785760405162461bcd60e51b815260206004820152603560248201527f506f6f6c3a3a726564756365457863657373436f6c6c61746572616c3a2054686044820152746520616d6f756e7420697320746f6f206c6172676560581b60648201526084016108e7565b611c8183612421565b505050565b600080600080600080600260009054906101000a90046001600160a01b03166001600160a01b0316636e16399c6040518163ffffffff1660e01b815260040160206040518083038186803b158015611cdd57600080fd5b505afa158015611cf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d159190612a0f565b90506000600260009054906101000a90046001600160a01b03166001600160a01b0316635f4370a56040518163ffffffff1660e01b815260040160206040518083038186803b158015611d6757600080fd5b505afa158015611d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9f9190612a0f565b905060008211611e005760405162461bcd60e51b815260206004820152602660248201527f506f6f6c3a3a63616c6352656465656d3a20496e76616c69642059546f6b656e60448201526520707269636560d01b60648201526084016108e7565b620f4240600d5489611e129190612b97565b611e1c9190612b77565b9250620f4240600d541015611f085781620f424080670de0b6b3a7640000601754620f4240611e4b9190612bb6565b600d54611e5b90620f4240612bb6565b611e65908e612b97565b611e6f9190612b97565b611e799190612b97565b611e839190612b77565b611e8d9190612b77565b611e979190612b77565b955080620f424080670de0b6b3a7640000601754620f4240611eb99190612bb6565b600d54611ec990620f4240612bb6565b611ed3908e612b97565b611edd9190612b97565b611ee79190612b97565b611ef19190612b77565b611efb9190612b77565b611f059190612b77565b94505b600d5415611f8a57620f424080601754620f4240611f269190612bb6565b600d54611f33908c612b97565b611f3d9190612b97565b611f479190612b77565b611f519190612b77565b9650620f424080601754600d548b611f699190612b97565b611f739190612b97565b611f7d9190612b77565b611f879190612b77565b93505b505091939590929450565b6007546001600160a01b031615611fee5760405162461bcd60e51b815260206004820152601e60248201527f506f6f6c3a3a73657454726561737572793a206e6f7420616c6c6f776564000060448201526064016108e7565b600780546001600160a01b0319166001600160a01b0383169081179091556040517f3c864541ef71378c6229510ed90f376565ee42d9c5e0904a984a9e863e6db44f90600090a250565b6000546001600160a01b031633146120625760405162461bcd60e51b81526004016108e790612af3565b6001600160a01b0381166120c75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108e7565b611923816122d7565b6000806000806000600260009054906101000a90046001600160a01b03166001600160a01b0316635f4370a56040518163ffffffff1660e01b815260040160206040518083038186803b15801561212657600080fd5b505afa15801561213a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215e9190612a0f565b9050600081116121bc5760405162461bcd60e51b8152602060048201526024808201527f506f6f6c3a3a63616c634d696e743a20496e76616c69642059546f6b656e20706044820152637269636560e01b60648201526084016108e7565b620f4240600d54620f42406121d19190612bb6565b6121db9088612b97565b6121e59190612b77565b9150806121fa670de0b6b3a764000084612b97565b6122049190612b77565b9350620f424080600d546018548961221c9190612b97565b6122269190612b97565b6122309190612b77565b61223a9190612b77565b9250620f42406018548761224e9190612b97565b6122589190612b77565b6122629087612bb6565b9450509193509193565b7321be370d5312f44cb42ce377bc9b8a0cef1a4c836001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156122bb57600080fd5b505af11580156122cf573d6000803e3d6000fd5b505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561237357600080fd5b505afa158015612387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ab9190612a0f565b6123b59190612b5f565b6040516001600160a01b03851660248201526044810182905290915061241b90859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526126e6565b50505050565b6007546001600160a01b031661248a5760405162461bcd60e51b815260206004820152602860248201527f506f6f6c3a3a7472616e73666572546f54726561737572793a496e76616c6964604482015267206164647265737360c01b60648201526084016108e7565b801561192357600754611923907321be370d5312f44cb42ce377bc9b8a0cef1a4c83906001600160a01b0316836127b8565b6000818311156124d7576124d08284612bb6565b90506124e4565b6124e18383612bb6565b90505b620f4240601554836124f69190612b97565b6125009190612b77565b811115611c815760405162461bcd60e51b815260206004820152602d60248201527f506f6f6c3a3a636865636b5072696365466c756374756174696f6e3a203e207960448201526c546f6b656e536c69707061676560981b60648201526084016108e7565b604051632e1a7d4d60e01b8152600481018290527321be370d5312f44cb42ce377bc9b8a0cef1a4c8390632e1a7d4d90602401600060405180830381600087803b1580156125b257600080fd5b505af11580156125c6573d6000803e3d6000fd5b5050505050565b8047101561261d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016108e7565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461266a576040519150601f19603f3d011682016040523d82523d6000602084013e61266f565b606091505b5050905080611c815760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016108e7565b600061273b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127e89092919063ffffffff16565b805190915015611c81578080602001905181019061275991906129a3565b611c815760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108e7565b6040516001600160a01b038316602482015260448101829052611c8190849063a9059cbb60e01b906064016123e4565b60606127f78484600085612801565b90505b9392505050565b6060824710156128625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016108e7565b6001600160a01b0385163b6128b95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108e7565b600080866001600160a01b031685876040516128d59190612aa4565b60006040518083038185875af1925050503d8060008114612912576040519150601f19603f3d011682016040523d82523d6000602084013e612917565b606091505b5091509150612927828286612932565b979650505050505050565b606083156129415750816127fa565b8251156129515782518084602001fd5b8160405162461bcd60e51b81526004016108e79190612ac0565b60006020828403121561297c578081fd5b81356127fa81612c0f565b600060208284031215612998578081fd5b81356127fa81612c24565b6000602082840312156129b4578081fd5b81516127fa81612c24565b600080604083850312156129d1578081fd5b82356129dc81612c24565b915060208301356129ec81612c24565b809150509250929050565b600060208284031215612a08578081fd5b5035919050565b600060208284031215612a20578081fd5b5051919050565b60008060408385031215612a39578182fd5b50508035926020909101359150565b600080600060608486031215612a5c578081fd5b505081359360208301359350604090920135919050565b60008060008060808587031215612a88578081fd5b5050823594602084013594506040840135936060013592509050565b60008251612ab6818460208701612bcd565b9190910192915050565b6020815260008251806020840152612adf816040850160208701612bcd565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115612b7257612b72612bf9565b500190565b600082612b9257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612bb157612bb1612bf9565b500290565b600082821015612bc857612bc8612bf9565b500390565b60005b83811015612be8578181015183820152602001612bd0565b8381111561241b5750506000910152565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461192357600080fd5b801515811461192357600080fdfea2646970667358221220131929c82f1f3a5cdb3b48ab6f81cea3040c85f957dcd70ede7db0d5f790636864736f6c63430008040033",
  "libraries": {
    "WethUtils": "0xb3ed3C150846F7363509d2A1A2B77a2a00DC8094"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "calcMint(uint256)": {
        "params": {
          "_ethIn": "Amount of Collateral token input."
        },
        "returns": {
          "_ethFee": ": the fee amount in Collateral token.",
          "_ethSwapIn": ": the amount of Collateral token to swap",
          "_xTokenOut": ": the amount of XToken output.",
          "_yTokenOutTwap": ": the amount of YToken output by swapping based on Twap price"
        }
      },
      "calcRedeem(uint256)": {
        "params": {
          "_xTokenIn": "Amount of XToken input."
        },
        "returns": {
          "_ethFee": ": the fee amount in Eth",
          "_ethOut": ": the amount of Eth output",
          "_requiredEthBalance": ": required Eth balance in the pool",
          "_yTokenOutSpot": ": the amount of YToken output based on Spot prrice",
          "_yTokenOutTwap": ": the amount of YToken output based on TWAP"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "reduceExcessCollateral(uint256)": {
        "params": {
          "_amount": "amount of WETH to reduce"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setCollateralRatioOptions(uint256,uint256,uint256,uint256)": {
        "params": {
          "_priceBand": "The collateral ratio will only be adjusted if current price move out of this band",
          "_ratioStepDown": "Step which Collateral Ratio will be decreased each updates",
          "_ratioStepUp": "Step which Collateral Ratio will be increased each updates",
          "_refreshCooldown": "The minimum delay between each Collateral Ratio updates"
        }
      },
      "setFees(uint256,uint256)": {
        "params": {
          "_mintingFee": "Minting fee in percentage",
          "_redemptionFee": "Redemption fee in percentage"
        }
      },
      "setMinCollateralRatio(uint256)": {
        "params": {
          "_minCollateralRatio": "value of minimum Collateral Ratio in 1e6 precision"
        }
      },
      "setOracle(address)": {
        "params": {
          "_oracle": "address of the oracle"
        }
      },
      "setSwapStrategy(address)": {
        "params": {
          "_swapStrategy": "address of Swapper utils contract"
        }
      },
      "setTreasury(address)": {
        "params": {
          "_treasury": "address of Treasury contract"
        }
      },
      "toggle(bool,bool)": {
        "params": {
          "_mintPaused": "Paused or NotPaused Minting",
          "_redeemPaused": "Paused or NotPaused Redemption"
        }
      },
      "toggleCollateralRatio(bool)": {
        "params": {
          "_collateralRatioPaused": "`true` or `false`"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "calcExcessCollateralBalance()": {
        "notice": "Calculate the excess collateral balance"
      },
      "calcMint(uint256)": {
        "notice": "Calculate the expected results for zap minting"
      },
      "calcRedeem(uint256)": {
        "notice": "Calculate the expected results for redemption"
      },
      "collect()": {
        "notice": "collect all minting and redemption"
      },
      "recollateralize()": {
        "notice": "Function to recollateralize the pool by receiving ETH"
      },
      "reduceExcessCollateral(uint256)": {
        "notice": "Transfer the excess balance of WETH to FeeReserve"
      },
      "refreshCollateralRatio()": {
        "notice": "Update collateral ratio and adjust based on the TWAP price of XToken"
      },
      "setCollateralRatioOptions(uint256,uint256,uint256,uint256)": {
        "notice": "Configure variables related to Collateral Ratio"
      },
      "setFees(uint256,uint256)": {
        "notice": "Set the protocol fees"
      },
      "setMinCollateralRatio(uint256)": {
        "notice": "Set the minimum Collateral Ratio"
      },
      "setOracle(address)": {
        "notice": "Set new oracle address"
      },
      "setSwapStrategy(address)": {
        "notice": "Set the address of Swapper utils"
      },
      "setTreasury(address)": {
        "notice": "Set the address of Treasury"
      },
      "setYTokenSlippage(uint256)": {
        "notice": "Set yTokenSlipage"
      },
      "toggle(bool,bool)": {
        "notice": "Turn on / off minting and redemption"
      },
      "toggleCollateralRatio(bool)": {
        "notice": "Pause or unpause collateral ratio updates"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Pool.sol:Pool",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 189,
        "contract": "contracts/Pool.sol:Pool",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 2579,
        "contract": "contracts/Pool.sol:Pool",
        "label": "oracle",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IMasterOracle)8261"
      },
      {
        "astId": 2582,
        "contract": "contracts/Pool.sol:Pool",
        "label": "xToken",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IXToken)8383"
      },
      {
        "astId": 2585,
        "contract": "contracts/Pool.sol:Pool",
        "label": "yToken",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IYToken)8394"
      },
      {
        "astId": 2588,
        "contract": "contracts/Pool.sol:Pool",
        "label": "yTokenReserve",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IYTokenReserve)8418"
      },
      {
        "astId": 2591,
        "contract": "contracts/Pool.sol:Pool",
        "label": "swapStrategy",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(ISwapStrategy)8339"
      },
      {
        "astId": 2593,
        "contract": "contracts/Pool.sol:Pool",
        "label": "treasury",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 2598,
        "contract": "contracts/Pool.sol:Pool",
        "label": "userInfo",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(UserInfo)2576_storage)"
      },
      {
        "astId": 2600,
        "contract": "contracts/Pool.sol:Pool",
        "label": "unclaimedEth",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 2602,
        "contract": "contracts/Pool.sol:Pool",
        "label": "unclaimedXToken",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 2604,
        "contract": "contracts/Pool.sol:Pool",
        "label": "unclaimedYToken",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 2616,
        "contract": "contracts/Pool.sol:Pool",
        "label": "mintPaused",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 2619,
        "contract": "contracts/Pool.sol:Pool",
        "label": "redeemPaused",
        "offset": 1,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 2622,
        "contract": "contracts/Pool.sol:Pool",
        "label": "collateralRatio",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 2624,
        "contract": "contracts/Pool.sol:Pool",
        "label": "lastRefreshCrTimestamp",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 2627,
        "contract": "contracts/Pool.sol:Pool",
        "label": "refreshCooldown",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 2630,
        "contract": "contracts/Pool.sol:Pool",
        "label": "ratioStepUp",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 2633,
        "contract": "contracts/Pool.sol:Pool",
        "label": "ratioStepDown",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 2636,
        "contract": "contracts/Pool.sol:Pool",
        "label": "priceTarget",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 2639,
        "contract": "contracts/Pool.sol:Pool",
        "label": "priceBand",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 2642,
        "contract": "contracts/Pool.sol:Pool",
        "label": "minCollateralRatio",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 2645,
        "contract": "contracts/Pool.sol:Pool",
        "label": "yTokenSlippage",
        "offset": 0,
        "slot": "21",
        "type": "t_uint256"
      },
      {
        "astId": 2648,
        "contract": "contracts/Pool.sol:Pool",
        "label": "collateralRatioPaused",
        "offset": 0,
        "slot": "22",
        "type": "t_bool"
      },
      {
        "astId": 2651,
        "contract": "contracts/Pool.sol:Pool",
        "label": "redemptionFee",
        "offset": 0,
        "slot": "23",
        "type": "t_uint256"
      },
      {
        "astId": 2657,
        "contract": "contracts/Pool.sol:Pool",
        "label": "mintingFee",
        "offset": 0,
        "slot": "24",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IMasterOracle)8261": {
        "encoding": "inplace",
        "label": "contract IMasterOracle",
        "numberOfBytes": "20"
      },
      "t_contract(ISwapStrategy)8339": {
        "encoding": "inplace",
        "label": "contract ISwapStrategy",
        "numberOfBytes": "20"
      },
      "t_contract(IXToken)8383": {
        "encoding": "inplace",
        "label": "contract IXToken",
        "numberOfBytes": "20"
      },
      "t_contract(IYToken)8394": {
        "encoding": "inplace",
        "label": "contract IYToken",
        "numberOfBytes": "20"
      },
      "t_contract(IYTokenReserve)8418": {
        "encoding": "inplace",
        "label": "contract IYTokenReserve",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(UserInfo)2576_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Pool.UserInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(UserInfo)2576_storage"
      },
      "t_struct(UserInfo)2576_storage": {
        "encoding": "inplace",
        "label": "struct Pool.UserInfo",
        "members": [
          {
            "astId": 2569,
            "contract": "contracts/Pool.sol:Pool",
            "label": "xTokenBalance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2571,
            "contract": "contracts/Pool.sol:Pool",
            "label": "yTokenBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2573,
            "contract": "contracts/Pool.sol:Pool",
            "label": "ethBalance",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 2575,
            "contract": "contracts/Pool.sol:Pool",
            "label": "lastAction",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}